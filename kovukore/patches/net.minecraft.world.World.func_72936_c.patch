# net.minecraft.world.World.func_72936_c($1, $2, $3, $4)
{
	if (this.doChunksNearChunkExist($2, $3, $4, 17))
	{
		int l = 0;
		int i1 = 0;
		this.theProfiler.startSection("getBrightness");
		int savedLightValue = this.getSavedLightValue($1, $2, $3, $4);
		int compLightValue = this.func_98179_a($2, $3, $4, $1);
		long l1;
		int x1;
		int y1;
		int z1;
		int lightEntry;
		int expectedEntryLight;
		int x2;
		int z2;
		int y2;
		if (compLightValue > savedLightValue)
		{
			this.lightUpdateBlockList[i1++] = 133152; // Save Entry at pos 0 (move i1)
		}
		else if (compLightValue < savedLightValue)
		{
			this.lightUpdateBlockList[i1++] = 133152 | savedLightValue << 18; // Save Entry at pos 0 with its Light Value (move i1)
			while (l < i1)
			{
				l1 = this.lightUpdateBlockList[l++]; // Get Entry at l, which starts at 0
				x1 = ((int) (l1 & 63) - 32 + $2); // Get Entry X coord
				y1 = ((int) (l1 >> 6 & 63) - 32 + $3); // Get Entry Y coord
				z1 = ((int) (l1 >> 12 & 63) - 32 + $4); // Get Entry Z coord
				lightEntry = (int) (l1 >>> 18) & 507375; // Get Entry's saved Light
				expectedEntryLight = this.getSavedLightValue($1, x1, y1, z1); // Get the saved Light Level at the entry's location
				if ((expectedEntryLight & 15) >= (lightEntry & 15))
				{
					this.setLightValue($1, x1, y1, z1, 0);
					if (lightEntry > 0)
					{
						x2 = MathHelper.abs_int(x1 - $2);
						y2 = MathHelper.abs_int(y1 - $3);
						z2 = MathHelper.abs_int(z1 - $4);
						if (x2 + y2 + z2 < 17)
						{
							for (int faceIndex = 0; faceIndex < 6; ++faceIndex)
							{
								int xFace = x1 + Facing.offsetsXForSide[faceIndex];
								int yFace = y1 + Facing.offsetsYForSide[faceIndex];
								int zFace = z1 + Facing.offsetsZForSide[faceIndex];
								net.minecraft.block.Block block = net.minecraft.block.Block.blocksList[getBlockId(xFace, yFace, zFace)];
								int blockOpacity = (block == null ? 0 : block.getLightOpacity(this, xFace, yFace, zFace));
								int opacity = Math.max(1, blockOpacity);
								// Get Saved light value from face
								expectedEntryLight = this.getSavedLightValue($1, xFace, yFace, zFace);
								int ll = lightEntry & 15;
								int rl = lightEntry & 480;
								int gl = lightEntry & 15360;
								int bl = lightEntry & 491520;
								ll -= opacity;
								rl -= 32 * opacity;
								gl -= 1024 * opacity;
								bl -= 32768 * opacity;
								if (((expectedEntryLight & 15) >= ll) && (i1 < this.lightUpdateBlockList.length))
									this.lightUpdateBlockList[i1++] = xFace - $2 + 32 | (yFace - $3 + 32 << 6) | (zFace - $4 + 32 << 12) | ((ll | rl | gl | bl) << 18);
							}
						}
					}
				}
			}
			// reset l, so we can loop through all of the updates again!
			l = 0;
		}
		this.theProfiler.endSection();
		this.theProfiler.startSection("checkedPosition < toCheckCount");
		while (l < i1)
		{
			l1 = this.lightUpdateBlockList[l++]; // Get Entry and it's light value (if there is one)
			x1 = ((int) (l1 & 63) - 32 + $2); // Get Entry X coord
			y1 = ((int) (l1 >> 6 & 63) - 32 + $3); // Get Entry Y coord
			z1 = ((int) (l1 >> 12 & 63) - 32 + $4); // Get Entry Z coord
			// Get the Saved Light at the Entry's Position
			lightEntry = this.getSavedLightValue($1, x1, y1, z1);
			// Compute the light level at the entry's location. If the light's have been set to zero before this occurs,
			// then the computation will change dynamically
			expectedEntryLight = this.func_98179_a(x1, y1, z1, $1);
			if (expectedEntryLight != lightEntry)
			{
				int tempStorageLightValue = lightEntry;
				if ((expectedEntryLight & 15) > (lightEntry & 15))
					tempStorageLightValue = tempStorageLightValue & 507360 | expectedEntryLight & 15;
				if ((expectedEntryLight & 480) > (lightEntry & 480))
					tempStorageLightValue = tempStorageLightValue & 506895 | expectedEntryLight & 480;
				if ((expectedEntryLight & 15360) > (lightEntry & 15360))
					tempStorageLightValue = tempStorageLightValue & 492015 | expectedEntryLight & 15360;
				if ((expectedEntryLight & 491520) > (lightEntry & 491520))
					tempStorageLightValue = tempStorageLightValue & 15855 | expectedEntryLight & 491520;
				if ((((1048576 | lightEntry) - expectedEntryLight) & 541200) > 0)
				{
					// Moved this here, from the lines above
					this.setLightValue($1, x1, y1, z1, tempStorageLightValue);
					x2 = Math.abs(x1 - $2);
					y2 = Math.abs(y1 - $3);
					z2 = Math.abs(z1 - $4);
					boolean flag = i1 < this.lightUpdateBlockList.length - 6; // What's with the minus 6? 6 Sides on cube?
					if (x2 + y2 + z2 < 17 && flag)
					{
						if ((((1048576 | this.getSavedLightValue($1, x1 - 1, y1, z1)) - expectedEntryLight) & 541200) > 0)
							this.lightUpdateBlockList[i1++] = x1 - 1 - $2 + 32 + (y1 - $3 + 32 << 6) + (z1 - $4 + 32 << 12);
						if ((((1048576 | this.getSavedLightValue($1, x1 + 1, y1, z1)) - expectedEntryLight) & 541200) > 0)
							this.lightUpdateBlockList[i1++] = x1 + 1 - $2 + 32 + (y1 - $3 + 32 << 6) + (z1 - $4 + 32 << 12);
						if ((((1048576 | this.getSavedLightValue($1, x1, y1 - 1, z1)) - expectedEntryLight) & 541200) > 0)
							this.lightUpdateBlockList[i1++] = x1 - $2 + 32 + (y1 - 1 - $3 + 32 << 6) + (z1 - $4 + 32 << 12);
						if ((((1048576 | this.getSavedLightValue($1, x1, y1 + 1, z1)) - expectedEntryLight) & 541200) > 0)
							this.lightUpdateBlockList[i1++] = x1 - $2 + 32 + (y1 + 1 - $3 + 32 << 6) + (z1 - $4 + 32 << 12);
						if ((((1048576 | this.getSavedLightValue($1, x1, y1, z1 - 1)) - expectedEntryLight) & 541200) > 0)
							this.lightUpdateBlockList[i1++] = x1 - $2 + 32 + (y1 - $3 + 32 << 6) + (z1 - 1 - $4 + 32 << 12);
						if ((((1048576 | this.getSavedLightValue($1, x1, y1, z1 + 1)) - expectedEntryLight) & 541200) > 0)
							this.lightUpdateBlockList[i1++] = x1 - $2 + 32 + (y1 - $3 + 32 << 6) + (z1 + 1 - $4 + 32 << 12);
					}
				}
			}
		}
		this.theProfiler.endSection();
	}
}
