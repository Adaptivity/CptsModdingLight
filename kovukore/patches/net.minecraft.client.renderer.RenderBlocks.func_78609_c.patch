# net.minecraft.client.renderer.RenderBlocks.func_78609_c($1, $2, $3, $4, $5, $6, $7)
{
	this.enableAO = false;
	net.minecraft.client.renderer.Tessellator tessellator = net.minecraft.client.renderer.Tessellator.instance;
	boolean flag = false;
	float f3 = 0.5F;
	float f4 = 1.0F;
	float f5 = 0.8F;
	float f6 = 0.6F;
	float f7 = f4 * $5;
	float f8 = f4 * $6;
	float f9 = f4 * $7;
	float f10 = f3;
	float f11 = f5;
	float f12 = f6;
	float f13 = f3;
	float f14 = f5;
	float f15 = f6;
	float f16 = f3;
	float f17 = f5;
	float f18 = f6;
	if ($1 != net.minecraft.block.Block.grass)
	{
		f10 = f3 * $5;
		f11 = f5 * $5;
		f12 = f6 * $5;
		f13 = f3 * $6;
		f14 = f5 * $6;
		f15 = f6 * $6;
		f16 = f3 * $7;
		f17 = f5 * $7;
		f18 = f6 * $7;
	}
	int l = $1.getMixedBrightnessForBlock(this.blockAccess, $2, $3, $4);
	if (this.renderAllFaces || $1.shouldSideBeRendered(this.blockAccess, $2, $3 - 1, $4, 0))
	{
		int i = this.renderMinY > 0.0D ? l : $1.getMixedBrightnessForBlock(this.blockAccess, $2, $3 - 1, $4);
		float rc = 1;
		float gc = 1;
		float bc = 1;
		float lc = 1;
		if ((i & 1048320) > 0)
		{
			lc = 1f - (i & 240) / 240f;
			rc = (i & 3840) / 3840f;
			gc = (i & 61440) / 61440f;
			bc = (i & 983040) / 983040f;
			rc = (rc + lc > 1) ? 1 : rc + lc;
			gc = (gc + lc > 1) ? 1 : gc + lc;
			bc = (bc + lc > 1) ? 1 : bc + lc;
		}
		tessellator.setBrightness(i);
		tessellator.setColorOpaque_F(f10 * rc, f13 * gc, f16 * bc);
		this.renderFaceYNeg($1, (double) $2, (double) $3, (double) $4, this.getBlockIcon($1, this.blockAccess, $2, $3, $4, 0));
		flag = true;
	}
	if (this.renderAllFaces || $1.shouldSideBeRendered(this.blockAccess, $2, $3 + 1, $4, 1))
	{
		int i = this.renderMaxY < 1.0D ? l : $1.getMixedBrightnessForBlock(this.blockAccess, $2, $3 + 1, $4);
		float rc = 1;
		float gc = 1;
		float bc = 1;
		float lc = 1;
		if ((i & 1048320) > 0)
		{
			lc = 1f - (i & 240) / 240f;
			rc = (i & 3840) / 3840f;
			gc = (i & 61440) / 61440f;
			bc = (i & 983040) / 983040f;
			rc = (rc + lc > 1) ? 1 : rc + lc;
			gc = (gc + lc > 1) ? 1 : gc + lc;
			bc = (bc + lc > 1) ? 1 : bc + lc;
		}
		tessellator.setBrightness(i);
		tessellator.setColorOpaque_F(f7 * rc, f8 * gc, f9 * bc);
		this.renderFaceYPos($1, (double) $2, (double) $3, (double) $4, this.getBlockIcon($1, this.blockAccess, $2, $3, $4, 1));
		flag = true;
	}
	net.minecraft.util.Icon icon;
	if (this.renderAllFaces || $1.shouldSideBeRendered(this.blockAccess, $2, $3, $4 - 1, 2))
	{
		int i = this.renderMinZ > 0.0D ? l : $1.getMixedBrightnessForBlock(this.blockAccess, $2, $3, $4 - 1);
		float rc = 1;
		float gc = 1;
		float bc = 1;
		float lc = 1;
		if ((i & 1048320) > 0)
		{
			lc = 1f - (i & 240) / 240f;
			rc = (i & 3840) / 3840f;
			gc = (i & 61440) / 61440f;
			bc = (i & 983040) / 983040f;
			rc = (rc + lc > 1) ? 1 : rc + lc;
			gc = (gc + lc > 1) ? 1 : gc + lc;
			bc = (bc + lc > 1) ? 1 : bc + lc;
		}
		tessellator.setBrightness(i);
		tessellator.setColorOpaque_F(f11 * rc, f14 * gc, f17 * bc);
		icon = this.getBlockIcon($1, this.blockAccess, $2, $3, $4, 2);
		this.renderFaceZNeg($1, (double) $2, (double) $3, (double) $4, icon);
		if (fancyGrass && icon.getIconName().equals("grass_side") && !this.hasOverrideBlockTexture())
		{
			tessellator.setColorOpaque_F(f11 * $5 * rc, f14 * $6 * gc, f17 * $7 * bc);
			this.renderFaceZNeg($1, (double) $2, (double) $3, (double) $4, BlockGrass.getIconSideOverlay());
		}
		flag = true;
	}
	if (this.renderAllFaces || $1.shouldSideBeRendered(this.blockAccess, $2, $3, $4 + 1, 3))
	{
		int i = this.renderMaxZ < 1.0D ? l : $1.getMixedBrightnessForBlock(this.blockAccess, $2, $3, $4 + 1);
		float rc = 1;
		float gc = 1;
		float bc = 1;
		float lc = 1;
		if ((i & 1048320) > 0)
		{
			lc = 1f - (i & 240) / 240f;
			rc = (i & 3840) / 3840f;
			gc = (i & 61440) / 61440f;
			bc = (i & 983040) / 983040f;
			rc = (rc + lc > 1) ? 1 : rc + lc;
			gc = (gc + lc > 1) ? 1 : gc + lc;
			bc = (bc + lc > 1) ? 1 : bc + lc;
		}
		tessellator.setBrightness(i);
		tessellator.setColorOpaque_F(f11 * rc, f14 * gc, f17 * bc);
		icon = this.getBlockIcon($1, this.blockAccess, $2, $3, $4, 3);
		this.renderFaceZPos($1, (double) $2, (double) $3, (double) $4, icon);
		if (fancyGrass && icon.getIconName().equals("grass_side") && !this.hasOverrideBlockTexture())
		{
			tessellator.setColorOpaque_F(f11 * $5 * rc, f14 * $6 * gc, f17 * $7 * bc);
			this.renderFaceZPos($1, (double) $2, (double) $3, (double) $4, BlockGrass.getIconSideOverlay());
		}
		flag = true;
	}
	if (this.renderAllFaces || $1.shouldSideBeRendered(this.blockAccess, $2 - 1, $3, $4, 4))
	{
		int i = this.renderMinX > 0.0D ? l : $1.getMixedBrightnessForBlock(this.blockAccess, $2 - 1, $3, $4);
		float rc = 1;
		float gc = 1;
		float bc = 1;
		float lc = 1;
		if ((i & 1048320) > 0)
		{
			lc = 1f - (i & 240) / 240f;
			rc = (i & 3840) / 3840f;
			gc = (i & 61440) / 61440f;
			bc = (i & 983040) / 983040f;
			rc = (rc + lc > 1) ? 1 : rc + lc;
			gc = (gc + lc > 1) ? 1 : gc + lc;
			bc = (bc + lc > 1) ? 1 : bc + lc;
		}
		tessellator.setBrightness(i);
		tessellator.setColorOpaque_F(f12 * rc, f15 * gc, f18 * bc);
		icon = this.getBlockIcon($1, this.blockAccess, $2, $3, $4, 4);
		this.renderFaceXNeg($1, (double) $2, (double) $3, (double) $4, icon);
		if (fancyGrass && icon.getIconName().equals("grass_side") && !this.hasOverrideBlockTexture())
		{
			tessellator.setColorOpaque_F(f12 * $5 * rc, f15 * $6 * gc, f18 * $7 * bc);
			this.renderFaceXNeg($1, (double) $2, (double) $3, (double) $4, BlockGrass.getIconSideOverlay());
		}
		flag = true;
	}
	if (this.renderAllFaces || $1.shouldSideBeRendered(this.blockAccess, $2 + 1, $3, $4, 5))
	{
		int i = this.renderMaxX < 1.0D ? l : $1.getMixedBrightnessForBlock(this.blockAccess, $2 + 1, $3, $4);
		float rc = 1;
		float gc = 1;
		float bc = 1;
		float lc = 1;
		if ((i & 1048320) > 0)
		{
			lc = 1f - (i & 240) / 240f;
			rc = (i & 3840) / 3840f;
			gc = (i & 61440) / 61440f;
			bc = (i & 983040) / 983040f;
			rc = (rc + lc > 1) ? 1 : rc + lc;
			gc = (gc + lc > 1) ? 1 : gc + lc;
			bc = (bc + lc > 1) ? 1 : bc + lc;
		}
		tessellator.setBrightness(i);
		tessellator.setColorOpaque_F(f12 * rc, f15 * gc, f18 * bc);
		icon = this.getBlockIcon($1, this.blockAccess, $2, $3, $4, 5);
		this.renderFaceXPos($1, (double) $2, (double) $3, (double) $4, icon);
		if (fancyGrass && icon.getIconName().equals("grass_side") && !this.hasOverrideBlockTexture())
		{
			tessellator.setColorOpaque_F(f12 * $5 * rc, f15 * $6 * gc, f18 * $7 * bc);
			this.renderFaceXPos($1, (double) $2, (double) $3, (double) $4, BlockGrass.getIconSideOverlay());
		}
		flag = true;
	}
	return flag;
}
