# net.minecraft.world.World.(init2)($1, $2, $3, $4, $5, $6)
{
	this.ambientTickCountdown = this.rand.nextInt(12000);
	this.lightUpdateBlockList = new long[32768];
	this.saveHandler = $1;
	this.theProfiler = $5;
	this.mapStorage = getMapStorage($1);
	this.worldLogAgent = $6;
	this.worldInfo = $1.loadWorldInfo();

	if ($4 != null)
	{
		this.provider = $4;
	}
	else if (this.worldInfo != null && this.worldInfo.getVanillaDimension() != 0)
	{
		this.provider = net.minecraft.world.WorldProvider.getProviderForDimension(this.worldInfo.getVanillaDimension());
	}
	else
	{
		this.provider = net.minecraft.world.WorldProvider.getProviderForDimension(0);
	}

	if (this.worldInfo == null)
	{
		this.worldInfo = new net.minecraft.world.WorldInfo($3, $2);
	}
	else
	{
		this.worldInfo.setWorldName($2);
	}

	this.provider.registerWorld(this);
	this.chunkProvider = this.createChunkProvider();
	if (this instanceof net.minecraft.world.WorldServer)
	{
		this.perWorldStorage = new net.minecraft.world.storage.MapStorage(new net.minecraftforge.common.WorldSpecificSaveHandler((net.minecraft.world.WorldServer)this, $1));
	}
	else
	{
		this.perWorldStorage = new net.minecraft.world.storage.MapStorage((net.minecraft.world.storage.ISaveHandler)null);
	}

	if (!this.worldInfo.isInitialized())
	{
		try
		{
			this.initialize($3);
		}
		catch (java.lang.Throwable throwable)
		{
			net.minecraft.crash.CrashReport crashreport = net.minecraft.crash.CrashReport.makeCrashReport(throwable, "Exception initializing level");

			try
			{
				this.addWorldInfoToCrashReport(crashreport);
			}
			catch (java.lang.Throwable throwable1)
			{
				;
			}

			throw new net.minecraft.util.ReportedException(crashreport);
		}

		this.worldInfo.setServerInitialized(true);
	}
}